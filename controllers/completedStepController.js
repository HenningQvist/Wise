// controllers/completedStepController.js
const {
  saveCompletedSteps,
  updateCompletedSteps,
  findByParticipantId
} = require('../models/completedStepModel');

// POST /api/saveSteps/   ‚Äî befintlig funktion
const saveOrUpdateCompletedSteps = async (req, res) => {
  try {
    console.log('üì• Mottaget req.body:', req.body);
    const { participantId, completedSteps } = req.body;
    const existing = await findByParticipantId(participantId);

    if (existing) {
      console.log('üõ† Uppdaterar med:', completedSteps.grundforutsattningar);
      await updateCompletedSteps(participantId, completedSteps.grundforutsattningar);
      return res.status(200).json({ message: 'Grundf√∂ruts√§ttningar uppdaterades' });
    } else {
      console.log('üÜï Sparar ny med:', completedSteps.grundforutsattningar);
      await saveCompletedSteps(participantId, completedSteps.grundforutsattningar);
      return res.status(201).json({ message: 'Grundf√∂ruts√§ttningar sparades' });
    }
  } catch (error) {
    console.error('üî• Fel vid spara/uppdatera:', error);
    res.status(500).json({ error: 'N√•got gick fel vid spara/uppdatera av grundf√∂ruts√§ttningar' });
  }
};

// GET /api/steps/:participantId  ‚Äî ny funktion
const getCompletedSteps = async (req, res) => {
  try {
    const participantId = req.params.participantId;
    console.log('üîç H√§mtar steg f√∂r participant:', participantId);

    const row = await findByParticipantId(participantId);
    if (!row) {
      // Om det inte finns n√•gon rad, returnera default-niv√•er 0
      const empty = {
        grundforutsattningar: {
          'Fysisk h√§lsa': 0,
          'Psykisk h√§lsa': 0,
          'Missbruk': 0,
          'Bostadssituation': 0,
          'Social isolering': 0
        }
      };
      return res.status(200).json(empty);
    }

    // Mappa kolumnerna tillbaka till dina etiketter
    const mapped = {
      grundforutsattningar: {
        'Fysisk h√§lsa':        row.fysisk_halsa,
        'Psykisk h√§lsa':       row.psykisk_halsa,
        'Missbruk':            row.missbruk,
        'Bostadssituation':    row.bostadssituation,
        'Social isolering':    row.social_isolering
      }
    };

    console.log('‚úÖ Returnerar sparade steg:', mapped);
    res.status(200).json(mapped);
  } catch (error) {
    console.error('üî• Fel vid h√§mtning av steg:', error);
    res.status(500).json({ error: 'Kunde inte h√§mta grundf√∂ruts√§ttningar' });
  }
};

module.exports = {
  saveOrUpdateCompletedSteps,
  getCompletedSteps
};
